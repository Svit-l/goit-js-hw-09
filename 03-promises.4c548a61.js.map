{"version":3,"sources":["js/03-promises.js"],"names":["delay","document","getElementsByName","step","amount","form","querySelector","createPromise","position","shouldResolve","Math","random","values","Promise","resolve","reject","setTimeout","then","console","log","catch","formSubmit","addEventListener","evt","preventDefault","inputDelay","Number","value","inputStep","inputAmount","i"],"mappings":";AAWA,MAAMA,EAAQC,SAASC,kBAAkB,SACnCC,EAAOF,SAASC,kBAAkB,QAClCE,EAASH,SAASC,kBAAkB,UACpCG,EAAOJ,SAASK,cAAc,SAEpC,SAASC,EAAcC,EAAUR,GACzBS,MAAAA,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAEJ,SAAAA,EAAUR,MAAAA,GACX,IAAIa,QAAQ,CAACC,EAASC,KACpCC,WAAW,KACLP,GACFK,EAAQF,GAEVG,EAAOH,IACNZ,KAIFiB,KAAK,IAAC,IAAA,SAAET,EAAF,MAAYR,GAAY,EAC7BkB,QAAQC,2BAA2BX,QAAeR,SAEnDoB,MAAM,IAAC,IAAA,SAAEZ,EAAF,MAAYR,GAAY,EAC9BkB,QAAQC,0BAA0BX,QAAeR,SAuBvD,MAAMqB,EAAahB,EAAKiB,iBAAiB,SAAUC,IACjDA,EAAIC,iBACEC,MAAAA,EAAaC,OAAOrB,EAAKL,MAAM2B,OAC/BC,EAAYF,OAAOrB,EAAKF,KAAKwB,OAC7BE,EAAcH,OAAOrB,EAAKD,OAAOuB,OACvCT,QAAQC,IAAIM,GACZP,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GACR7B,IAAAA,EAAQyB,EACP,IAAA,IAAIK,EAAI,EAAGA,EAAID,EAAaC,IAC/BvB,IACIM,IAAAA,QAAQC,IACVE,WAAW,IAAMF,EAAQgB,GAAI9B,GAC7BkB,QAAQC,2BAA2BW,EAAI,QAAQ9B,QAC9CyB,GACHzB,GAAS4B","file":"03-promises.4c548a61.js","sourceRoot":"../src","sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// В HTML есть разметка формы,\n// в поля которой пользователь будет вводить первую задержку в миллисекундах,\n// шаг увеличения задержки для каждого промиса после первого\n// и количество промисов которое необходимо создать.\n\n// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз,\n//   сколько ввели в поле amount.\n//   При каждом вызове передай ей номер создаваемого промиса(position)\n//   и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n\nconst delay = document.getElementsByName('delay');\nconst step = document.getElementsByName('step');\nconst amount = document.getElementsByName('amount');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const values = { position, delay };\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(values);\n      }\n      reject(values);\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// createPromise.then(result => console.log(result)).catch(result => console.log(result));\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst formSubmit = form.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const inputDelay = Number(form.delay.value);\n  const inputStep = Number(form.step.value);\n  const inputAmount = Number(form.amount.value);\n  console.log(inputDelay);\n  console.log(inputStep);\n  console.log(inputAmount);\n  let delay = inputDelay;\n  for (let i = 0; i < inputAmount; i++) {\n    createPromise();\n    new Promise(resolve => {\n      setTimeout(() => resolve(i), delay);\n      console.log(`✅ Fulfilled promise ${i + 1} in ${delay}ms`);\n    }, inputDelay);\n    delay += inputStep;\n  }\n});\n"]}